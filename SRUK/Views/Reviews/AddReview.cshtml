@model AddReviewViewModel

@{
    ViewData["Title"] = "Adding review";
}

<h2>Review</h2>
@Html.Partial("_StatusMessage", Model.StatusMessage)
<h4>
    Adding review for "@Model.PaperVersion.Paper.Title" 
</h4>
<hr />
<form asp-action="AddReview" method="post" enctype="multipart/form-data">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" asp-for="Id" />
    <div class="row">
        <div class="col-md-3">
            <div class="form-group row">
                <p><b><a asp-action="Download" asp-controller="PaperVersions" asp-route-id="@Model.PaperVersion.Id">Download paper <span class="glyphicon glyphicon-download-alt" aria-hidden="true" data-toggle="tooltip" title="Download"></span></a></b></p>
            </div>
            <div class="form-group row">
                <p><label asp-for="Recommendation" class="control-label"></label></p>
                <div class="col-md-12">
                    <p><label class="recommendationRadioLabel">@Html.RadioButtonFor(m => m.Recommendation, 2) Accepted</label></p>
                    <p><label class="recommendationRadioLabel">@Html.RadioButtonFor(m => m.Recommendation, 3, new { @id="radioNeedComment1"}) Accepted with minor changes</label></p>
                    <p><label class="recommendationRadioLabel">@Html.RadioButtonFor(m => m.Recommendation, 4, new { @id="radioNeedComment2"}) Major revision</label></p>
                    <p><label class="recommendationRadioLabel">@Html.RadioButtonFor(m => m.Recommendation, 5) Rejected</label></p>
                    <span asp-validation-for="Recommendation" class="text-danger"></span>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group row" style="margin-left:inherit;">
                <label asp-for="File" class="control-label"></label>
                <input type="file" asp-for="File" class="form-control" style="height:inherit;" />
                <span asp-validation-for="File" class="text-danger"></span>
            </div>
            <div class="form-group row" style="margin-left:inherit;">
                <label asp-for="CommentForAuthor" class="control-label"></label>
                @Html.TextAreaFor(m => m.CommentForAuthor, new { @class = "form-control col-md-2", @rows = "5", @style = "max-width: 100%; min-width:100%;" })
                <span asp-validation-for="CommentForAuthor" class="text-danger"></span>
            </div>
            <div class="form-group row" style="margin-left:inherit;">
                <label asp-for="CommentForAdmin" class="control-label"></label>
                @Html.TextAreaFor(m => m.CommentForAdmin, new { @class = "form-control col-md-2", @rows = "5", @style = "max-width: 100%; min-width:100%;" })
                <span asp-validation-for="CommentForAdmin" class="text-danger"></span>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <input type="submit" value="Add" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>

<div>
    <a asp-action="MyReviews">Back to List</a>
</div>

<style>
    th {
        text-align: center;
    }
    .recommendationRadioLabel{
        font-weight: normal;
    }
</style>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>


        $('.recommendationRadioLabel').click(function () {
            if (!$('#radioNeedComment1').is(':checked') || !$('#radioNeedComment2').is(':checked')) { $('#CommentForAuthor').removeAttr("required", "required") }
            if ($('#radioNeedComment1').is(':checked') || $('#radioNeedComment2').is(':checked')) { $('#CommentForAuthor').attr("required", "required") }
        });


        //$('#IsPositive').change(function () {
        //    if (this.checked) {
        //        $('#Unsuitable').prop('checked', false).prop('disabled', true);
        //        $('#EditorialErrors').prop('checked', false).prop('disabled', true);
        //        $('#TechnicalErrors').prop('checked', false).prop('disabled', true);
        //        $('#RepeatReview').prop('checked', false).prop('disabled', true);
        //    } else {
        //        $('#Unsuitable').removeAttr('disabled', true);
        //        $('#EditorialErrors').removeAttr('disabled');
        //        $('#TechnicalErrors').removeAttr('disabled');
        //        $('#RepeatReview').removeAttr('disabled');
        //    }

        //});
        //$('#Unsuitable').change(function () {
        //    if (this.checked) {
        //        $('#IsPositive').prop('checked', false).prop('disabled', true);
        //        $('#EditorialErrors').prop('checked', false).prop('disabled', true);
        //        $('#TechnicalErrors').prop('checked', false).prop('disabled', true);
        //        $('#RepeatReview').prop('checked', false).prop('disabled', true);
        //    } else {
        //        $('#IsPositive').removeAttr('disabled', true);
        //        $('#EditorialErrors').removeAttr('disabled');
        //        $('#TechnicalErrors').removeAttr('disabled');
        //        $('#RepeatReview').removeAttr('disabled');
        //    }
        //});
        //$('#EditorialErrors').change(function () {
        //    if (this.checked) {
        //        $('#IsPositive').prop('checked', false).prop('disabled', true);
        //        $('#Unsuitable').prop('checked', false).prop('disabled', true);
        //    } else if (!$('#EditorialErrors').is(':checked') && !$('#TechnicalErrors').is(':checked') && !$('#RepeatReview').is(':checked')) {
        //        $('#IsPositive').removeAttr('disabled', true);
        //        $('#Unsuitable').removeAttr('disabled');
        //    }
        //});
        //$('#TechnicalErrors').change(function () {
        //    if (this.checked) {
        //        $('#IsPositive').prop('checked', false).prop('disabled', true);
        //        $('#Unsuitable').prop('checked', false).prop('disabled', true);
        //    } else if (!$('#EditorialErrors').is(':checked') && !$('#TechnicalErrors').is(':checked') && !$('#RepeatReview').is(':checked')) {
        //        $('#IsPositive').removeAttr('disabled', true);
        //        $('#Unsuitable').removeAttr('disabled');
        //    }
        //});
        //$('#RepeatReview').change(function () {
        //    if (this.checked) {
        //        $('#IsPositive').prop('checked', false).prop('disabled', true);
        //        $('#Unsuitable').prop('checked', false).prop('disabled', true);
        //    } else if (!$('#EditorialErrors').is(':checked') && !$('#TechnicalErrors').is(':checked') && !$('#RepeatReview').is(':checked')) {
        //        $('#IsPositive').removeAttr('disabled', true);
        //        $('#Unsuitable').removeAttr('disabled');
        //    }
        //}); 

    </script>
}
